import mysql.connector
from urllib.parse import urlparse
from dotenv import load_dotenv
import os

# ÌôòÍ≤ΩÎ≥ÄÏàò Î°úÎìú
load_dotenv()

def get_db_connection():
    """Railway DB Ïó∞Í≤∞"""
    mysql_url = os.getenv('MYSQLHOST')
    parsed = urlparse(mysql_url)
    
    return mysql.connector.connect(
        host=parsed.hostname,
        port=parsed.port,
        user=parsed.username,
        password=parsed.password,
        database=parsed.path[1:],  # 'railway'
        charset='utf8mb4'
    )

def execute_sql(cursor, sql, description):
    """SQL Ïã§Ìñâ Î∞è Î°úÍ∑∏"""
    try:
        # Ïó¨Îü¨ Î¨∏Ïû•ÏúºÎ°ú Î∂ÑÎ¶¨Ìï¥ÏÑú Ïã§Ìñâ
        statements = [stmt.strip() for stmt in sql.split(';') if stmt.strip()]
        for stmt in statements:
            if stmt:
                cursor.execute(stmt)
        print(f"‚úÖ {description}")
        return True
    except Exception as e:
        print(f"‚ùå {description} Ïã§Ìå®: {str(e)}")
        return False

def main():
    """Ï†ÑÏ≤¥ DB Íµ¨Ï∂ï Ïã§Ìñâ"""
    print("üöÄ Railway DB Íµ¨Ï∂ï ÏãúÏûë...")
    
    conn = get_db_connection()
    cursor = conn.cursor()
    
    try:
        # ===========================================
        # 1. Í∏∞Î≥∏ ÌÖåÏù¥Î∏î ÏÉùÏÑ±
        # ===========================================
        
        print("\nüìä 1Îã®Í≥Ñ: Í∏∞Î≥∏ ÌÖåÏù¥Î∏î ÏÉùÏÑ±")
        
        # universities ÌÖåÏù¥Î∏î
        universities_sql = """
        CREATE TABLE IF NOT EXISTS universities (
          university_id BIGINT PRIMARY KEY AUTO_INCREMENT,
          name          VARCHAR(200) NOT NULL,
          country_code  CHAR(2)      NOT NULL,             
          email         VARCHAR(255),
          created_at    TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
          UNIQUE KEY uq_univ (country_code, name)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4
        """
        execute_sql(cursor, universities_sql, "universities ÌÖåÏù¥Î∏î ÏÉùÏÑ±")
        
        # program_type ÌÖåÏù¥Î∏î
        program_type_sql = """
        CREATE TABLE IF NOT EXISTS program_type (
          program_type_id BIGINT PRIMARY KEY AUTO_INCREMENT,
          code            VARCHAR(50)  NOT NULL UNIQUE,
          name            VARCHAR(100) NOT NULL
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4
        """
        execute_sql(cursor, program_type_sql, "program_type ÌÖåÏù¥Î∏î ÏÉùÏÑ±")
        
        # users ÌÖåÏù¥Î∏î (ÌïÑÏàò ÏùòÏ°¥ÏÑ±)
        users_sql = """
        CREATE TABLE IF NOT EXISTS users (
          user_id        BIGINT PRIMARY KEY AUTO_INCREMENT,
          name           VARCHAR(120) NOT NULL,
          email          VARCHAR(255) NOT NULL UNIQUE,
          nickname       VARCHAR(50)  NOT NULL,
          gender         ENUM('MALE','FEMALE') NULL,            
          birth          DATE NULL,                              
          profile_image  VARCHAR(500) NULL,
          mileage        BIGINT NOT NULL DEFAULT 0 CHECK (mileage >= 0),
          home_university_id BIGINT NULL,
          dest_university_id BIGINT NULL,
          created_at     TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
          updated_at     TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3),
          CONSTRAINT fk_user_home FOREIGN KEY (home_university_id) REFERENCES universities(university_id) ON DELETE SET NULL,
          CONSTRAINT fk_user_dest FOREIGN KEY (dest_university_id) REFERENCES universities(university_id) ON DELETE SET NULL
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4
        """
        execute_sql(cursor, users_sql, "users ÌÖåÏù¥Î∏î ÏÉùÏÑ±")
        
        # departure_info ÌÖåÏù¥Î∏î
        departure_sql = """
        CREATE TABLE IF NOT EXISTS departure_info (
          departure_id     BIGINT PRIMARY KEY AUTO_INCREMENT,
          user_id          BIGINT NOT NULL,
          university_id    BIGINT NULL,
          program_type_id  BIGINT NULL,
          country_code     CHAR(2) NOT NULL,
          start_date       TIMESTAMP(3) NOT NULL,          
          end_date         TIMESTAMP(3) NULL,                 
          status           ENUM('PLANNED','ONGOING','COMPLETED','CANCELED') NOT NULL DEFAULT 'PLANNED',
          created_at       TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
          CONSTRAINT fk_dep_user      FOREIGN KEY (user_id)        REFERENCES users(user_id)              ON DELETE CASCADE,
          CONSTRAINT fk_dep_univ      FOREIGN KEY (university_id)  REFERENCES universities(university_id) ON DELETE SET NULL,
          CONSTRAINT fk_dep_progtype  FOREIGN KEY (program_type_id) REFERENCES program_type(program_type_id) ON DELETE SET NULL,
          CHECK (end_date IS NULL OR start_date <= end_date),
          INDEX idx_dep_user_dates    (user_id, start_date),
          INDEX idx_dep_country_dates (country_code, start_date),
          INDEX idx_dep_status_dates  (status, start_date)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4
        """
        execute_sql(cursor, departure_sql, "departure_info ÌÖåÏù¥Î∏î ÏÉùÏÑ±")
        
        print("\nüìã 2Îã®Í≥Ñ: Ï≤¥ÌÅ¨Î¶¨Ïä§Ìä∏ ÌÖåÏù¥Î∏î ÏÉùÏÑ±")
        
        # checklist_template ÌÖåÏù¥Î∏î
        template_sql = """
        CREATE TABLE IF NOT EXISTS checklist_template (
          template_id     BIGINT PRIMARY KEY AUTO_INCREMENT,
          title           VARCHAR(150) NOT NULL,
          description     VARCHAR(500) NULL,
          country_code    CHAR(2)   NULL,
          program_type_id BIGINT    NULL,
          university_id   BIGINT    NULL,
          created_at      TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
          updated_at      TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3),
          CONSTRAINT fk_tpl_program   FOREIGN KEY (program_type_id) REFERENCES program_type(program_type_id) ON DELETE SET NULL,
          CONSTRAINT fk_tpl_univ      FOREIGN KEY (university_id)   REFERENCES universities(university_id)  ON DELETE SET NULL,
          INDEX idx_tp_filter (country_code, program_type_id, university_id, created_at)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4
        """
        execute_sql(cursor, template_sql, "checklist_template ÌÖåÏù¥Î∏î ÏÉùÏÑ±")
        
        # checklist_template_item ÌÖåÏù¥Î∏î
        template_item_sql = """
        CREATE TABLE IF NOT EXISTS checklist_template_item (
          template_item_id BIGINT PRIMARY KEY AUTO_INCREMENT,
          template_id      BIGINT NOT NULL,
          title            VARCHAR(150) NOT NULL,
          description      TEXT NULL,
          offset_days      INT NOT NULL DEFAULT 0,
          tag              ENUM('NONE','SAVING','EXCHANGE','INSURANCE','DOCUMENT','ETC') NOT NULL DEFAULT 'NONE',
          default_amount   DECIMAL(18,2) NULL,
          created_at       TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
          CONSTRAINT fk_titem_tpl FOREIGN KEY (template_id) REFERENCES checklist_template(template_id) ON DELETE CASCADE
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4
        """
        execute_sql(cursor, template_item_sql, "checklist_template_item ÌÖåÏù¥Î∏î ÏÉùÏÑ±")
        
        # user_checklist ÌÖåÏù¥Î∏î
        user_checklist_sql = """
        CREATE TABLE IF NOT EXISTS user_checklist (
          user_checklist_id BIGINT PRIMARY KEY AUTO_INCREMENT,
          user_id           BIGINT NOT NULL,
          departure_id      BIGINT NOT NULL,
          template_id       BIGINT NULL,
          title             VARCHAR(150) NOT NULL,
          visibility        ENUM('PUBLIC','PRIVATE','UNLISTED') NOT NULL DEFAULT 'PUBLIC',
          created_at        TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
          CONSTRAINT fk_ucl_user   FOREIGN KEY (user_id)      REFERENCES users(user_id)               ON DELETE CASCADE,
          CONSTRAINT fk_ucl_dep    FOREIGN KEY (departure_id) REFERENCES departure_info(departure_id) ON DELETE CASCADE,
          CONSTRAINT fk_ucl_tpl    FOREIGN KEY (template_id)  REFERENCES checklist_template(template_id) ON DELETE SET NULL,
          UNIQUE KEY uq_ucl_user_dep_tpl (user_id, departure_id, template_id),
          INDEX idx_ucl_user_dep (user_id, departure_id, created_at)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4
        """
        execute_sql(cursor, user_checklist_sql, "user_checklist ÌÖåÏù¥Î∏î ÏÉùÏÑ±")
        
        # user_checklist_item ÌÖåÏù¥Î∏î
        user_checklist_item_sql = """
        CREATE TABLE IF NOT EXISTS user_checklist_item (
          uci_id            BIGINT PRIMARY KEY AUTO_INCREMENT,
          user_checklist_id BIGINT NOT NULL,
          template_item_id  BIGINT NULL,
          title             VARCHAR(150) NOT NULL,
          description       TEXT NULL,
          due_date          TIMESTAMP(3) NULL,
          status            ENUM('TODO','DOING','DONE','SKIP') NOT NULL DEFAULT 'TODO',
          completed_at      TIMESTAMP(3) NULL,
          tag               ENUM('NONE','SAVING','EXCHANGE','INSURANCE','DOCUMENT','ETC') NOT NULL DEFAULT 'NONE',
          linked_amount     DECIMAL(18,2) NULL,
          created_at        TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
          CONSTRAINT fk_uci_ucl   FOREIGN KEY (user_checklist_id) REFERENCES user_checklist(user_checklist_id) ON DELETE CASCADE,
          CONSTRAINT fk_uci_titem FOREIGN KEY (template_item_id)  REFERENCES checklist_template_item(template_item_id) ON DELETE SET NULL,
          INDEX idx_uci_progress (user_checklist_id, status, due_date),
          INDEX idx_uci_due (due_date)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4
        """
        execute_sql(cursor, user_checklist_item_sql, "user_checklist_item ÌÖåÏù¥Î∏î ÏÉùÏÑ±")
        
        print("\nü§ñ 3Îã®Í≥Ñ: AI Í¥ÄÎ†® ÌÖåÏù¥Î∏î ÏÉùÏÑ±")
        
        # item_popularity_stats ÌÖåÏù¥Î∏î
        popularity_sql = """
        CREATE TABLE IF NOT EXISTS item_popularity_stats (
          stat_id BIGINT PRIMARY KEY AUTO_INCREMENT,
          country_code CHAR(2) NOT NULL,
          program_type_id BIGINT NOT NULL,
          item_title VARCHAR(150) NOT NULL,
          item_description TEXT NULL,
          item_tag ENUM('NONE','SAVING','EXCHANGE','INSURANCE','DOCUMENT','ETC') DEFAULT 'NONE',
          popularity_rate DECIMAL(5,4) NOT NULL,
          avg_offset_days INT NOT NULL,
          priority_score INT NOT NULL DEFAULT 5,
          created_at TIMESTAMP(3) DEFAULT CURRENT_TIMESTAMP(3),
          FOREIGN KEY (program_type_id) REFERENCES program_type(program_type_id) ON DELETE CASCADE,
          INDEX idx_country_program (country_code, program_type_id, popularity_rate DESC)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4
        """
        execute_sql(cursor, popularity_sql, "item_popularity_stats ÌÖåÏù¥Î∏î ÏÉùÏÑ±")
        
        conn.commit()
        print("\n‚úÖ Î™®Îì† ÌÖåÏù¥Î∏î ÏÉùÏÑ± ÏôÑÎ£å!")
        
        # ===========================================
        # 4. ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞ ÏûÖÎ†•
        # ===========================================
        
        print("\nüìù 4Îã®Í≥Ñ: ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞ ÏûÖÎ†•")
        
        # program_type Îç∞Ïù¥ÌÑ∞
        program_data = """
        INSERT IGNORE INTO program_type (code, name) VALUES 
        ('EXCHANGE', 'ÍµêÌôòÌïôÏÉù'),
        ('LANGUAGE', 'Ïñ¥ÌïôÏó∞Ïàò'),
        ('INTERNSHIP', 'Ìï¥Ïô∏Ïù∏ÌÑ¥Ïã≠'),
        ('VOLUNTEER', 'Ìï¥Ïô∏Î¥âÏÇ¨')
        """
        execute_sql(cursor, program_data, "program_type ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞")
        
        # universities Îç∞Ïù¥ÌÑ∞
        univ_data = """
        INSERT IGNORE INTO universities (name, country_code, email) VALUES 
        ('ÌïúÏñëÎåÄÌïôÍµê', 'KR', 'exchangeout@hanyang.ac.kr');
        
        INSERT IGNORE INTO universities (name, country_code) VALUES 
        ('LeTourneau University', 'US'),
        ('University of Oregon', 'US'),
        ('Temple University', 'US'),
        ('Waseda University', 'JP'),
        ('Sophia University', 'JP'),
        ('University of Konstanz', 'DE'),
        ('University of Bayreuth', 'DE')
        """
        execute_sql(cursor, univ_data, "universities ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞")
        
        # checklist_template Îç∞Ïù¥ÌÑ∞
        template_data = """
        INSERT IGNORE INTO checklist_template (title, description, country_code, program_type_id) VALUES 
        ('ÎØ∏Íµ≠ ÍµêÌôòÌïôÏÉù Ï§ÄÎπÑ Ï≤¥ÌÅ¨Î¶¨Ïä§Ìä∏', 'F-1 ÎπÑÏûê Î∞è ÎØ∏Íµ≠ ÎåÄÌïô ÍµêÌôòÌïôÏÉùÏùÑ ÏúÑÌïú ÌëúÏ§Ä Ï§ÄÎπÑ Ìï≠Î™©', 'US', 1),
        ('ÏùºÎ≥∏ ÍµêÌôòÌïôÏÉù Ï§ÄÎπÑ Ï≤¥ÌÅ¨Î¶¨Ïä§Ìä∏', 'ÏùºÎ≥∏ ÎåÄÌïô ÍµêÌôòÌïôÏÉùÏùÑ ÏúÑÌïú ÌëúÏ§Ä Ï§ÄÎπÑ Ìï≠Î™©', 'JP', 1),
        ('ÎèÖÏùº ÍµêÌôòÌïôÏÉù Ï§ÄÎπÑ Ï≤¥ÌÅ¨Î¶¨Ïä§Ìä∏', 'ÎèÖÏùº ÎåÄÌïô ÍµêÌôòÌïôÏÉùÏùÑ ÏúÑÌïú ÌëúÏ§Ä Ï§ÄÎπÑ Ìï≠Î™©', 'DE', 1);
        
        INSERT IGNORE INTO checklist_template (title, description, program_type_id) VALUES 
        ('ÍµêÌôòÌïôÏÉù Í∏∞Î≥∏ Ï§ÄÎπÑ Ï≤¥ÌÅ¨Î¶¨Ïä§Ìä∏', 'Î™®Îì† ÍµêÌôòÌïôÏÉùÏù¥ Í≥µÌÜµÏúºÎ°ú Ï§ÄÎπÑÌï¥Ïïº Ìï† Í∏∞Î≥∏ Ìï≠Î™©', 1)
        """
        execute_sql(cursor, template_data, "checklist_template ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞")
        
        # checklist_template_item Îç∞Ïù¥ÌÑ∞ (ÎØ∏Íµ≠)
        template_item_us = """
        INSERT IGNORE INTO checklist_template_item (template_id, title, description, offset_days, tag, default_amount) VALUES
        (1, 'Ïó¨Í∂å Ïú†Ìö®Í∏∞Í∞Ñ ÌôïÏù∏', '6Í∞úÏõî Ïù¥ÏÉÅ Ïú†Ìö®Í∏∞Í∞Ñ ÌôïÏù∏ ÌïÑÏàò', -120, 'DOCUMENT', 50000.00),
        (1, 'F-1 ÌïôÏÉùÎπÑÏûê Î∞úÍ∏â', 'DS-160 ÏûëÏÑ± Î∞è ÏòÅÏÇ¨Í¥Ä Ïù∏ÌÑ∞Î∑∞ ÏòàÏïΩ', -90, 'DOCUMENT', 100000.00),
        (1, 'Ìï≠Í≥µÍ∂å ÏòàÏïΩ', 'ÏôïÎ≥µ Ìï≠Í≥µÍ∂å ÎòêÎäî Ìé∏ÎèÑ Ìï≠Í≥µÍ∂å', -45, 'ETC', 100000.00),
        (1, 'Ìï¥Ïô∏Ïó¨ÌñâÏûêÎ≥¥Ìóò Í∞ÄÏûÖ', 'ÏùòÎ£åÎπÑ Î≥¥Ïû• ÌïÑÏàò', -30, 'INSURANCE', 60000.00),
        (1, 'Îã¨Îü¨ ÌôòÏ†Ñ', 'ÌòÑÏßÄ ÏÉùÌôúÎπÑ 3-6Í∞úÏõîÎ∂Ñ ÌôòÏ†Ñ', -21, 'EXCHANGE', 150000.00),
        (1, 'Ïßê Ïã∏Í∏∞ Î∞è ÏàòÌïòÎ¨º Ï≤¥ÌÅ¨', 'Ìï≠Í≥µÏÇ¨ Í∑úÏ†ïÏóê ÎßûÎäî ÏàòÌïòÎ¨º Ï§ÄÎπÑ', -7, 'ETC', 50000.00)
        """
        execute_sql(cursor, template_item_us, "ÎØ∏Íµ≠ ÌÖúÌîåÎ¶ø Ìï≠Î™©")
        
        # checklist_template_item Îç∞Ïù¥ÌÑ∞ (ÏùºÎ≥∏)
        template_item_jp = """
        INSERT IGNORE INTO checklist_template_item (template_id, title, description, offset_days, tag, default_amount) VALUES
        (2, 'Ïó¨Í∂å Ïú†Ìö®Í∏∞Í∞Ñ ÌôïÏù∏', '6Í∞úÏõî Ïù¥ÏÉÅ Ïú†Ìö®Í∏∞Í∞Ñ ÌôïÏù∏', -100, 'DOCUMENT', 40000.00),
        (2, 'ÌïôÏÉùÎπÑÏûê Î∞úÍ∏â', 'Ïû¨ÌïôÏ¶ùÎ™ÖÏÑú, ÏûÖÌïôÌóàÍ∞ÄÏÑú Ï§ÄÎπÑ', -60, 'DOCUMENT', 80000.00),
        (2, 'Ìï≠Í≥µÍ∂å ÏòàÏïΩ', 'ÌïúÍµ≠-ÏùºÎ≥∏ ÏôïÎ≥µ ÎòêÎäî Ìé∏ÎèÑ', -45, 'ETC', 80000.00),
        (2, 'Ìï¥Ïô∏Ïó¨ÌñâÏûêÎ≥¥Ìóò', 'ÏùòÎ£åÎπÑ, Î∞∞ÏÉÅÏ±ÖÏûÑ Î≥¥Ïû•', -21, 'INSURANCE', 50000.00),
        (2, 'ÏóîÌôî ÌôòÏ†Ñ', 'ÌòÑÏßÄ ÏÉùÌôúÎπÑ 2-3Í∞úÏõîÎ∂Ñ', -14, 'EXCHANGE', 120000.00),
        (2, 'Ïû¨Î•òÏπ¥Îìú Ïã†Ï≤≠', 'ÏûÖÍµ≠ ÌõÑ 14Ïùº ÎÇ¥ Í±∞Ï£ºÏßÄ Ïã†Í≥†', 7, 'DOCUMENT', 35000.00)
        """
        execute_sql(cursor, template_item_jp, "ÏùºÎ≥∏ ÌÖúÌîåÎ¶ø Ìï≠Î™©")
        
        # checklist_template_item Îç∞Ïù¥ÌÑ∞ (ÎèÖÏùº)
        template_item_de = """
        INSERT IGNORE INTO checklist_template_item (template_id, title, description, offset_days, tag, default_amount) VALUES
        (3, 'Ïó¨Í∂å Ïú†Ìö®Í∏∞Í∞Ñ ÌôïÏù∏', '6Í∞úÏõî Ïù¥ÏÉÅ Ïú†Ìö®Í∏∞Í∞Ñ ÌôïÏù∏', -120, 'DOCUMENT', 50000.00),
        (3, 'ÎèÖÏùº ÌïôÏÉùÎπÑÏûê Î∞úÍ∏â', 'Ïû•Í∏∞Ï≤¥Î•ò ÎπÑÏûê ÎòêÎäî ÏûÖÍµ≠ ÌõÑ Í±∞Ï£ºÌóàÍ∞Ä', -75, 'DOCUMENT', 100000.00),
        (3, 'Ìï≠Í≥µÍ∂å ÏòàÏïΩ', 'ÌïúÍµ≠-ÎèÖÏùº ÏôïÎ≥µ Ìï≠Í≥µÍ∂å', -45, 'ETC', 120000.00),
        (3, 'ÎèÖÏùº Í±¥Í∞ïÎ≥¥Ìóò Í∞ÄÏûÖ', 'AOK, TK Îì± Î≤ïÏ†ï Í±¥Í∞ïÎ≥¥Ìóò', -30, 'INSURANCE', 70000.00),
        (3, 'Ïú†Î°ú ÌôòÏ†Ñ', 'ÌòÑÏßÄ ÏÉùÌôúÎπÑ 2-4Í∞úÏõîÎ∂Ñ', -21, 'EXCHANGE', 130000.00),
        (3, 'Anmeldung (Í±∞Ï£ºÏßÄ Îì±Î°ù)', 'Í±∞Ï£ºÏßÄ Îì±Î°ù Ïã†Í≥†', 3, 'DOCUMENT', 40000.00)
        """
        execute_sql(cursor, template_item_de, "ÎèÖÏùº ÌÖúÌîåÎ¶ø Ìï≠Î™©")
        
        # item_popularity_stats Îç∞Ïù¥ÌÑ∞ (ÏùºÎ∂ÄÎßå)
        popularity_data = """
        INSERT IGNORE INTO item_popularity_stats (country_code, program_type_id, item_title, item_description, item_tag, popularity_rate, avg_offset_days, priority_score) VALUES
        ('US', 1, 'Ïó¨Í∂å Ïú†Ìö®Í∏∞Í∞Ñ ÌôïÏù∏', '6Í∞úÏõî Ïù¥ÏÉÅ Ïú†Ìö®Í∏∞Í∞Ñ ÌôïÏù∏ ÌïÑÏàò', 'DOCUMENT', 0.98, -120, 1),
        ('US', 1, 'F-1 ÌïôÏÉùÎπÑÏûê Î∞úÍ∏â', 'DS-160 ÏûëÏÑ± Î∞è ÏòÅÏÇ¨Í¥Ä Ïù∏ÌÑ∞Î∑∞', 'DOCUMENT', 0.95, -90, 1),
        ('US', 1, 'Îã¨Îü¨ ÌôòÏ†Ñ', 'ÌòÑÏßÄ ÏÉùÌôúÎπÑ 3-6Í∞úÏõîÎ∂Ñ ÌôòÏ†Ñ', 'EXCHANGE', 0.94, -21, 2),
        ('JP', 1, 'Ïó¨Í∂å Ïú†Ìö®Í∏∞Í∞Ñ ÌôïÏù∏', '6Í∞úÏõî Ïù¥ÏÉÅ Ïú†Ìö®Í∏∞Í∞Ñ ÌôïÏù∏', 'DOCUMENT', 0.97, -100, 1),
        ('JP', 1, 'ÏóîÌôî ÌôòÏ†Ñ', 'ÌòÑÏßÄ ÏÉùÌôúÎπÑ 2-3Í∞úÏõîÎ∂Ñ', 'EXCHANGE', 0.92, -14, 2),
        ('DE', 1, 'Ïó¨Í∂å Ïú†Ìö®Í∏∞Í∞Ñ ÌôïÏù∏', '6Í∞úÏõî Ïù¥ÏÉÅ Ïú†Ìö®Í∏∞Í∞Ñ ÌôïÏù∏', 'DOCUMENT', 0.96, -120, 1),
        ('DE', 1, 'Ïú†Î°ú ÌôòÏ†Ñ', 'ÌòÑÏßÄ ÏÉùÌôúÎπÑ 2-4Í∞úÏõîÎ∂Ñ', 'EXCHANGE', 0.90, -21, 2)
        """
        execute_sql(cursor, popularity_data, "item_popularity_stats ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞")
        
        conn.commit()
        print("\nüéâ Î™®Îì† ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞ ÏûÖÎ†• ÏôÑÎ£å!")
        
        # ÏµúÏ¢Ö ÌôïÏù∏
        cursor.execute("SHOW TABLES")
        tables = cursor.fetchall()
        print(f"\nüìä ÏÉùÏÑ±Îêú ÌÖåÏù¥Î∏î ({len(tables)}Í∞ú):")
        for table in tables:
            print(f"  ‚úì {table[0]}")
            
        print(f"\nüöÄ Railway DB Íµ¨Ï∂ï ÏÑ±Í≥µ! Ï¥ù {len(tables)}Í∞ú ÌÖåÏù¥Î∏î ÏÉùÏÑ±Îê®")
        
    except Exception as e:
        print(f"\n‚ùå DB Íµ¨Ï∂ï Ïã§Ìå®: {str(e)}")
        conn.rollback()
    finally:
        cursor.close()
        conn.close()

if __name__ == "__main__":
    main()
